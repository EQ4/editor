/*
	=========================================================
				Copyright 2013 Julian Schmidt

	This file is part of the Sonic Potions Drumsynth Editor
	=========================================================

    The Sonic Potions Drumsynth Editor is free software: you 
	can redistribute it and/or modify it under the terms of 
	the GNU General Public License as published by the Free 
	Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    The Sonic Potions Drumsynth Editor is distributed in the
	hope that it will be useful, but WITHOUT ANY WARRANTY; 
	without even the implied warranty of MERCHANTABILITY or 
	FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General 
	Public License for more details.

    You should have received a copy of the GNU General 
	Public License along with the Sonic Potions Drumsynth 
	Editor. If not, see <http://www.gnu.org/licenses/>.
	=========================================================
 */
#include "menu.h"

//-----------------------------------------------------------------
/** array holding all the names for the parameters*/
Name valueNames[NUM_NAMES]  =
{
	{SHORT_EMPTY,CAT_EMPTY,LONG_EMPTY},					//empty	
	{SHORT_COARSE,CAT_OSC,LONG_COARSE},					//coarse tune
	{SHORT_FINE,CAT_OSC,LONG_FINE},						//fine tune
	{SHORT_ATTACK,CAT_VELO_EG,LONG_ATTACK},				//attack velocity
	{SHORT_DECAY,CAT_VELO_EG,LONG_DECAY},				//decay velocity
	{SHORT_DECAY,CAT_PITCH_EG,LONG_DECAY},				//pitch decay
	{SHORT_MOD,CAT_PITCH_MOD,LONG_AMOUNT},				//mod amount
	{SHORT_FM_AMNT,CAT_FM,LONG_AMOUNT},					//fm amount
	{SHORT_FREQ,CAT_FM,LONG_FREQ},						//fm frequency
	{SHORT_DRIVE, CAT_VOICE,LONG_DRIVE},				//drive
	{SHORT_VOL,CAT_VOICE,LONG_VOL},						//volume
	{SHORT_PAN,CAT_VOICE,LONG_PAN},						//pan
	{SHORT_NOISE,CAT_NOISE,LONG_FREQ},					//noise frequency
	{SHORT_MIX,CAT_NOISE_OSC,LONG_MIX},					//mix
	{SHORT_REPEAT,CAT_VELO_EG,LONG_REPEAT_CNT},			//repeat
	{SHORT_FREQ,CAT_FILTER,LONG_FREQ},					//filter freq
	{SHORT_FIL_RESO,CAT_FILTER,LONG_RESONANCE},			//filter reso
	{SHORT_FIL_TYPE,CAT_FILTER,LONG_TYPE},				//filter type
	{SHORT_MOD_OSC1_FREQ,CAT_MOD_OSC,LONG_FREQ},		//mod osc 1 freq
	{SHORT_MOD_OSC2_FREQ,CAT_MOD_OSC,LONG_FREQ},		//mod osc 2 freq
	{SHORT_MOD_OSC1_GAIN,CAT_MOD_OSC,LONG_GAIN},		//mod osc 1 gain
	{SHORT_MOD_OSC2_GAIN,CAT_MOD_OSC,LONG_GAIN},		//mod osc 2 gain
		
	{SHORT_FREQ,CAT_LFO,LONG_FREQ},						//freq lfo
	{SHORT_MOD,CAT_LFO,LONG_AMOUNT},					//mod lfo
	{SHORT_WAVE,CAT_LFO,LONG_WAVE},						//wave lfo
	{SHORT_DEST,CAT_LFO,LONG_DEST_PARAM},				//destination lfo (destination)
		
	{SHORT_SYNC,CAT_LFO,LONG_CLOCKSYNC},				//TEXT_SYNC_LFO,
	{SHORT_RETRIGGER,CAT_LFO,LONG_RETRIGGER},			//TEXT_RETRIGGER_LFO,
	{SHORT_OFFSET,CAT_LFO,LONG_OFFSET},					//TEXT_OFFSET_LFO,
	{SHORT_VOICE,CAT_LFO,LONG_DEST_VOICE},				//TEXT_TARGET_VOICE_LFO,
		
	{SHORT_SLOPE,CAT_VELO_EG,LONG_SLOPE},				//TEXT_EG_SLOPE,
		
	{SHORT_DECAY1,CAT_VELO_EG,LONG_DECAY_CLOSED},		//TEXT_DECAY_CLOSED,
	{SHORT_DECAY2,CAT_VELO_EG,LONG_DECAY_OPEN},			//TEXT_DECAY_OPEN,
	
	{SHORT_WAVE,CAT_OSC,LONG_WAVE},						//TEXT_WAVEFORM
		
	{SHORT_WAVE,CAT_TRANS,LONG_WAVE},					//TEXT_TRANSIENT_WAVE
	{SHORT_VOL,CAT_TRANS,LONG_VOL},						//TEXT_TRANSIENT_VOLUME
	{SHORT_FREQ,CAT_TRANS,LONG_FREQ},					//TEXT_TRANSIENT_FREQ
		
	
	{SHORT_EQ_GAIN,CAT_EQ,LONG_GAIN},					//TEXT_EQ_GAIN
	{SHORT_EQ_FREQ,CAT_EQ,LONG_FREQ},					//TEXT_EQ_FREQ
		
#if USE_CODEC_EQ
		
	{SHORT_EQ,CAT_EQ,LONG_ENABLE},						//TEXT_CODEC_EQ_ENABLE
	{SHORT_MOD_OSC1_FREQ,CAT_EQ,LONG_FREQ},				//TEXT_CODEC_EQ_FB
	{SHORT_MOD_OSC2_FREQ,CAT_EQ,LONG_FREQ},				//TEXT_CODEC_EQ_FT
	{SHORT_MOD_OSC1_GAIN,CAT_EQ,LONG_GAIN},				//TEXT_CODEC_EQ_GB
	{SHORT_MOD_OSC2_GAIN,CAT_EQ,LONG_GAIN},				//TEXT_CODEC_EQ_GT
		
	{SHORT_LIMITER,CAT_LIMIT,LONG_ENABLE},				//TEXT_CODEC_LIMIT_ENABLE
	{SHORT_ATTACK,CAT_LIMIT,LONG_ATTACK},				//TEXT_CODEC_LIMIT_ATTACK
	{SHORT_RELEASE,CAT_LIMIT,LONG_RELEASE},				//TEXT_CODEC_LIMIT_RELEASE
	{SHORT_MAX,CAT_LIMIT,LONG_THRESH_MAX},				//TEXT_CODEC_LIMIT_MAX
	{SHORT_MIN,CAT_LIMIT,LONG_THRESH_MIN},				//TEXT_CODEC_LIMIT_MIN
		
#endif
		
	{SHORT_ROLL,CAT_PATTERN,LONG_ROLLRATE},				//TEXT_ROLL_SPEED
	{SHORT_MORPH,CAT_SOUND,LONG_MORPH},					//TEXT_X_FADE
		
		
	{SHORT_VOL,CAT_STEP,LONG_VOL},						//TEXT_STEP_VOLUME	
	{SHORT_NOTE,CAT_STEP,LONG_NOTE},					//TEXT_NOTE	
	{SHORT_PROBABILITY,CAT_STEP,LONG_PROBABILITY},		//TEXT_PROBABILITY,
	{SHORT_STEP,CAT_STEP,LONG_NUMBER},					//TEXT_ACTIVE_STEP
		
	{SHORT_LENGTH,CAT_PATTERN,LONG_LENGTH},				//TEXT_PAT_LENGTH,
	{SHORT_STEP,CAT_EUKLID,LONG_STEPS},					//TEXT_NUM_STEPS,
		
	{SHORT_BPM,CAT_GLOBAL,LONG_TEMPO},					//TEXT_BPM
		
	{SHORT_CHANNEL,CAT_VOICE,LONG_MIDI_CHANNEL},		//TEXT_MIDI_CHANNEL
	{SHORT_OUT,CAT_VOICE,LONG_AUDIO_OUT},				//TEXT_AUDIO_OUT
		
	{SHORT_SR,CAT_VOICE,LONG_SAMPLE_RATE},				//TEXT_SAMPLE_RATE
		
	{SHORT_REPEAT,CAT_PATTERN,LONG_REPEAT_CNT},				//TEXT_PATTERN_REPEAT
	{SHORT_NXT,CAT_PATTERN,LONG_NEXT_PAT},				//TEXT_PATTERN_NEXT
		
//	{SHORT_PHASE,CAT_OSC,LONG_PHASE},				//TEXT_OSC_PHASE
	{SHORT_MODE,CAT_OSC,LONG_MODE},				//TEXT_MODE mix or mod for fm osc
	{SHORT_VOL,CAT_OSC,LONG_VOL},				//TEXT_OSC_VOLUME fm oscillator volume in mix mode
	{SHORT_DRIVE, CAT_FILTER,LONG_DRIVE},			//TEXT_FILTER_DRIVE
		
	{SHORT_DEST,	CAT_VELOCITY,	LONG_DEST_PARAM},		//TEXT_VEL_DEST,
	{SHORT_FM_AMNT,	CAT_VELOCITY,	LONG_AMOUNT},			//TEXT_VEL_AMT,
	{SHORT_VELOCITY,CAT_VELOCITY,	LONG_VELOCITY_MOD},		//TEXT_VEL_MOD_VOL,
		
	{SHORT_FETCH,	CAT_PARAMETER,	LONG_FETCH},		//TEXT_FETCH
	{SHORT_FOLLOW,	CAT_SEQUENCER,	LONG_FOLLOW},		//TEXT_FOLLOW
	{SHORT_QUANT,	CAT_SEQUENCER,	LONG_QUANTISATION},			//TEXT_QUANTISATION
		
	{SHORT_TRACK,	CAT_SEQUENCER,	LONG_AUTOMATION_TRACK},			//TEXT_AUTOMATION_TRACK
		
	{SHORT_DEST,	CAT_SEQUENCER,	LONG_AUTOMATION_DEST},	//TEXT_PARAM_DEST
	{SHORT_VALUE,	CAT_SEQUENCER,	LONG_AUTOMATION_VAL},	//TEXT_PARAM_VAL
	
	{SHORT_SHUFFLE,	CAT_SEQUENCER,	LONG_SHUFFLE},	//TEXT_SHUFFLE
	
};